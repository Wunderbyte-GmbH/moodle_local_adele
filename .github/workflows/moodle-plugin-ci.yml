name: Moodle Plugin CI

on: [push, pull_request]

jobs:
  test:
    runs-on: self-hosted

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      mariadb:
        image: mariadb:10.8
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        include:
          - php: 8.2
            moodle-branch: MOODLE_403_STABLE
            database: pgsql
          - php: 8.1
            moodle-branch: MOODLE_402_STABLE
            database: mariadb
          - php: 8.1
            moodle-branch: MOODLE_401_STABLE
            database: pgsql
          - php: 8.0
            moodle-branch: MOODLE_401_STABLE
            database: mariadb

    steps:
      - name: Clean workspace for matrix job
        run: |
          MATRIX_ID="${{ matrix.php }}-${{ matrix.database }}-${{ matrix.moodle-branch }}"
          rm -rf "$GITHUB_WORKSPACE"
          mkdir -p "$GITHUB_WORKSPACE/matrix-$MATRIX_ID"
          echo "MATRIX_DIR=matrix-$MATRIX_ID" >> $GITHUB_ENV

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: ${{ env.MATRIX_DIR }}/plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          # Install nvm v0.39.7 (temp workaround for issue moodlehq/moodle-plugin-ci#309).
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
      - name: Install moodle-plugin-ci
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        run: |
          moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-local_wunderbyte_table
          moodle-plugin-ci add-plugin --branch master Wunderbyte-GmbH/moodle-mod_adele
          moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-local_catquiz
          moodle-plugin-ci add-plugin --branch catmodel_main Wunderbyte-GmbH/moodle-mod_adaptivequiz
          moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-adaptivequizcatmodel_catquiz
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}
          MUSTACHE_IGNORE_NAMES: ''

      - name: PHP Lint
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker --max-warnings 0

      - name: Moodle PHPDoc Checker
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: Validating
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci grunt --max-lint-warnings 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # You can specify the version of Node.js you are using

      - name: Install dependencies
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        run: |
          cd vue3
          npm install

      - name: Run tests
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        run: |
          cd vue3
          npm test -- --ci --coverage
