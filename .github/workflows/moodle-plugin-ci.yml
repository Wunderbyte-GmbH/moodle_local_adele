name: Moodle Plugin CI

on: [push, pull_request]

jobs:
  ci:
    uses: Wunderbyte-GmbH/catalyst-moodle-workflows/.github/workflows/ci.yml@main
    with:
      # Change these based on your plugin's requirements
      disable_release: true  # Use true if using the tag-based release workflow

      # moodle_branches: "MOODLE_401_STABLE MOODLE_402_STABLE"  # Optional: Only test specific Moodle versions
      min_php: "7.4"  # Optional: Set minimum PHP version

      # Command to install more dependencies
      extra_plugin_runners: |
        moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-local_wunderbyte_table
        moodle-plugin-ci add-plugin --branch master Wunderbyte-GmbH/moodle-mod_adele
        moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-local_catquiz
        moodle-plugin-ci add-plugin --branch catmodel_main Wunderbyte-GmbH/moodle-mod_adaptivequiz
        moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-adaptivequizcatmodel_catquiz

      # If you need to ignore specific paths (third-party libraries are ignored by default)
      # ignore_paths: "vue3,moodle/tests/fixtures,moodle/Sniffs,moodle/vue3,OpenTBS,TinyButStrong"

      # Specify paths to ignore for mustache lint
      mustache_ignore_names: 'initview.mustache'

      # Specify paths to ignore for code checker
      # codechecker_ignore_paths: 'OpenTBS, TinyButStrong'

      # Specify paths to ignore for PHPDoc checker
      # phpdocchecker_ignore_paths: 'OpenTBS, TinyButStrong'

      # If you need to disable specific tests
      # disable_phpcpd: true
      # disable_mustache: true
      # disable_phpunit: true
      disable_grunt: true
      # disable_phpdoc: true
      # disable_phpcs: true
      # disable_phplint: true
      # disable_ci_validate: true

      # If you need to enable PHPMD
      enable_phpmd: true

      # For strict code quality checks
      codechecker_max_warnings: 0

      # This might not be needed with the reusable workflow as it might handle this already
      workarounds: |
        # WORKAROUND 17/04/2025: The following code is a workaround for the "File is stale and needs to be rebuilt" error
        # This occurs when AMD modules import Moodle core dependencies
        # See issue: https://github.com/moodlehq/moodle-plugin-ci/issues/350
        # This workaround should be removed once the issue is fixed upstream
        # Load NVM and use the version from .nvmrc
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

        # Go to moodle directory
        cd moodle

        # Use NVM to set Node version and ensure grunt-cli is installed
        nvm use
        npm install
        npm install -g grunt-cli

        # Go back to plugin directory
        cd ../plugin

        # Pre-build AMD files to avoid stale file warnings
        echo "=== Building AMD files before CI check ==="
        grunt --gruntfile ../moodle/Gruntfile.js amd
        echo "AMD files built successfully"
        # Go Back to main directory
        cd ..
        # END OF WORKAROUND

      custom_steps: |
        # Set up Node.js
        echo "::group::Vue3 Testing"

        # Set up Node.js
        NODE_VERSION="20"
        echo "Setting up Node.js ${NODE_VERSION}"
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install ${NODE_VERSION}
        nvm use ${NODE_VERSION}

        # Check if Vue3 directory exists
        if [ -d "plugin/vue3" ]; then
          echo "Vue3 directory found at plugin/vue3"

          # Install Vue dependencies
          cd plugin/vue3
          echo "Installing dependencies in Vue3 directory with legacy peer deps"
          npm install --force
          npm install --save-dev @babel/plugin-syntax-dynamic-import --force

          # Run Vue tests
          echo "Available npm scripts:"
          npm run || true

          # Check if test script exists
          if grep -q '"test":' package.json; then
            echo "Running npm test"
            export NODE_OPTIONS="--max-old-space-size=4096"
            npm test -- --ci --coverage || echo "Tests failed but continuing"
          else
            echo "No test script found in package.json. Skipping tests."
          fi

          cd ../..
        else
          echo "Vue3 directory not found. Skipping Vue3 tests."
        fi
        echo "::endgroup::"
